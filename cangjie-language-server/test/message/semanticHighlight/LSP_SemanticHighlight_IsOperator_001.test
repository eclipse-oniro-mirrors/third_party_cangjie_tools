{"caseFolder":"normalTest//IsOperator", "id":"9"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/Work/projects/Iteration_5th/B055/UT","rootUri":"file:///d%3A/Work/projects/Iteration_5th/B055/UT/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/Fork/cangjie_language_server/test/testChr/normalTest/IsOperator/src/isOperator.cj","languageId":"Cangjie","version":1,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\n// e is T 是一个用于类型检查的表达式，e is T 的类型是Bool。其中e 可以是任何类型的表达式，T 可\r\n// 以是任何类型。\r\n// 当e 的运行时类型R 是T 的子类型时，e is T 的值为true，否则值为false。\r\nopen class Base {\r\n    var name: String = \"Alice\"\r\n}\r\nclass Derived1 <: Base {\r\n    var age: UInt8 = 18\r\n}\r\nclass Derived2 <: Base {\r\n    var gender: String = \"female\"\r\n}\r\nfunc test(): Int64 {\r\n    var testVT = 1 is Int64 // testVT = true\r\n    testVT = 1 is String // testVT = false\r\n    testVT = true is Int64 // testVT = false\r\n    testVT = [1, 2, 3] is List<Int64> // testVT = true\r\n    /**\r\n    * this is base1\r\n    */\r\n    let base1_Rename: Base = Base()\r\n    let base2: Base = Derived1()\r\n    let base3: Base = Derived2()\r\n    let derived1: Derived1 = Derived1()\r\n    let derived2: Derived2 = Derived2()\r\n    var test = base1_Rename is Base // test = true\r\n    test = base1_Rename is Derived1 // test = false\r\n    test = base1_Rename is Derived2 // test = false\r\n    test = base2 is Base // test = true\r\n    test = base2 is Derived1 // test = true\r\n    test = base2 is Derived2 // test = false\r\n    test = base3 is Base // test = true\r\n    test = base3 is Derived1 // test = false\r\n    test = base3 is Derived2 // test = true\r\n    test = derived1 is Base // test = true\r\n    test = derived1 is Derived1 // test = true\r\n    test = derived1 is Derived2 // test = false\r\n    test = derived2 is Base // test = true\r\n    test = derived2 is Derived1 // test = false\r\n    test = derived2 is Derived2 // test = true\r\n    let riss = Base() as Base\r\n    return 0\r\n}"}}}
{"jsonrpc":"2.0","id":"9","method":"textDocument/semanticTokens","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/Fork/cangjie_language_server/test/testChr/normalTest/IsOperator/src/isOperator.cj"}}}
{"jsonrpc":"2.0","id":"1","method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}