{"caseFolder":"normalTest//PatternMatch", "id":"7"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/Work/projects/Iteration_5th/B055/UT","rootUri":"file:///d%3A/Work/projects/Iteration_5th/B055/UT/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/PatternMatch/src/enumPattern/enumPattern.cj","languageId":"Cangjie","version":1,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\npackage enumPattern\r\nenum TimeUnit {\r\n| Year\r\n| Year(Int64)\r\n| Month(Int64, Int64)\r\n| Day(Int64, Int64, Int64)\r\n| Hour(Int64, Int64, Int64, Int64)\r\n}\r\nfunc testEnumPattern() {\r\n    let oneYeara = TimeUnit.Year(100000)\r\n    let oneYear = TimeUnit.Year(100000)\r\n    var howManyHours:Int64 = match (oneYear) {\r\n    case $Year => 365\r\n    case Year(y) => y * 365 * 24 // matched\r\n    case Month(y, m) => y * 365 * 24 + m * 30 * 24\r\n    case Day(y, m, d) => y * 365 * 24 + m * 30 * 24 + d * 24\r\n    case Hour(y, m, d, h) => y * 365 * 24 + m * 30 * 24 + d * 24 + h\r\n    }\r\n    let twoYear = TimeUnit.Year(2)\r\n    var howManyYears: Int64 = match (twoYear) {\r\n    case Year(y) | Month(y, m) => y // error: different number of variables are introduced\r\n    case Year(y) | Month(x, _) => y // error: different name of variables are introduced\r\n    case Year(y) | Month(y, _) => y // ok\r\n\r\n    }\r\n\r\n}"}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}