{"caseFolder":"normalTest//ConCurrency", "id":"26"}
{"jsonrpc":"2.0","id":"0","method":"initialize","params":{"processId":null,"rootPath":"C:/Users/code_project/DevEcoStudioProjects/MyApplication3","rootUri":"file:///c%3A/Users/code_project/DevEcoStudioProjects/MyApplication3/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d:/test_char/src/mutex.cj","languageId":"Cangjie","version":3,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\nfrom std import sync.*\r\n\r\nvar m = Mutex()\r\nvar c = m.newCondition()\r\nvar flag : Bool = true\r\nvar count : Int64 = 0\r\n\r\nfunc test2() : Int64 {\r\n    spawn {\r\n        m.lock()\r\n        while (flag) {\r\n            c.wait()\r\n        }\r\n        count = count + 1\r\n        m.unlock()\r\n    }\r\n    m.lock()\r\n    flag = false\r\n    m.unlock()\r\n    c.notifyAll()\r\n    return 0\r\n}\r\n\r\nvar m2 = Mult\r\n\r\n\r\n"}}}
{"jsonrpc":"2.0","id":26,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d:/test_char/src/mutex.cj"},"position":{"line":29,"character":13},"context":{"triggerKind":1}}}
{"jsonrpc":"2.0","id":"4","method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}