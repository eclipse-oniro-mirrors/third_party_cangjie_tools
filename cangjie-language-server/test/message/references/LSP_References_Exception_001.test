{"caseFolder":"normalTest//Exception", "id":"7"}
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":33336,"clientInfo":{"name":"vscode","version":"1.55.2"},"rootPath":"d:\\Work\\repo\\Char\\NewVersion\\cangjie_language_server\\test\\testChr\\normalTest\\Exception","rootUri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/Exception","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["comment","keyword","number","regexp","operator","namespace","type","struct","class","interface","enum","typeParameter","function","member","macro","variable","parameter","property","label"],"tokenModifiers":["declaration","documentation","static","abstract","deprecated","async","readonly"]}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/Exception","name":"Exception"}],"workDoneToken":"d62352dd-57e9-4c79-a872-6bc79921d06a"}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/documentHighlight/Exception/src/exception.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\nfunc test(){\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n        let lastElement = arrayTest[3]\n    } catch (_) {\n        print(\"catch an exception!\")\n    }\n}\nfunc test1(){\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n        let lastElement = arrayTest[3]\n    } catch (e : Error) {\n        print(\"catch an exception!\"+ e.getMessage())\n    }\n}\nfunc test22(){\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n        let lastElement = arrayTest[3]\n    } catch (e : Throwable) {\n        print(\"catch an exception!\"+ e.getMessage())\n    }\n}\nfunc test23(){\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n        let lastElement = arrayTest[3]\n    } catch (e : Exception) {\n        print(\"catch an exception!\"+ e.getMessage())\n    }\n}\n////////////////////\nfunc main() {\n    try {\n    throw ArithmeticException()\n    } catch (e: RuntimeException) { // Caught.\n    print(\"RuntimeException and its subtypes can be caught here\")\n    }\n    return 0\n}\nopen class Father1 <: ArithmeticException {\n    var father: Int32 = 0\n    init(){}\n    func whatFather() { print(\"I am Father\") }\n}\nopen class Father <: Exception {\n    var father: Int32 = 0\n    func whatFather() { print(\"I am Father\") }\n}\nclass ChildOne <: Father {\n    var childOne: Int32 = 1\n    init(){}\n\n    func whatChildOne() { print(\"I am ChildOne\") }\n    func whatChild() { print(\"I am method in ChildOne\") }\n}\nclass ChildTwo <: Father {\n    var childTwo: Int32 = 2\n    func whatChildTwo() { print(\"I am ChildTwo\") }\n    func whatChild() { print(\"I am method in ChildTwo\") }\n}\n\nfunc test2() {\n    var a = 1\n    func throwE() {\n        if (a == 1) {\n            throw ChildOne()\n        } else {\n            throw ChildTwo()\n        }\n    }\n    try {\n    throwE()\n    } catch (e: ChildOne | ChildTwo) {\n        e.whatFather() // ok: e is an object of Father\n        print(e.getMessage()) // ok: e is an object of Father\n    }\n\n}\n/////////////////////////\nfunc f():Int64 {\n    var x = 1;\n    try {\n        return x + x; // Return 2.\n    } catch (e: RuntimeException) { // Caught.\n        print(\"RuntimeException and its subtypes can be caught here\")\n    } finally {\n        x = 2;\n    }\n    return 0\n}\nfunc f1():Int64 {\n    var x = 1;\n    try {\n        return x + x; // Return 2.\n    } catch (e: RuntimeException) { // Caught.\n        print(\"RuntimeException and its subtypes can be caught here\")\n    } finally {\n        x = 2;\n        return x + x; // Return 4\n    } // The return value is 4 but not 2.\n    return 0\n}\n///////////////////////\nfunc f3(){\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n        throw ArithmeticException()\n        let temp = arrayTest[0] + 1 // Will never be executed.\n    } catch (e: ArithmeticException) {\n        print(\"an arithmeticException happened: \" + e.getMessage())\n    } finally {\n        print(\"the finally block is executed\")\n    }\n}\n////////////////////\nenum Result111<TTT> { Success(TTT) | Failure(Throwable) }\n\nfunc f4(){\n    var freshExc: Option<Throwable> = Option<Throwable>.None\n    var freshExc1: Option<Throwable> = None\n\n    let arrayTest: RefArray<Int32> = RefArray<Int32>([0, 1, 2])\n    try {\n    let lastElement = arrayTest[3]\n    } catch (e: ArithmeticException | IndexOutOfBoundsException) {\n        print(\"exception info: \" + e.getMessage())\n    } catch (e: Exception) {\n        print(\"neither ArithmeticException nor ArrayIndexOutOfBoundsException,exception info: \" + e.getMessage())\n    } finally {\n        print(\"the finally block is executed\")\n    }\n}"}}}
{"jsonrpc":"2.0","id":7,"method":"textDocument/references","params":{"context":{"includeDeclaration":false},"textDocument":{"uri":"file:///d%3A/LSP_cangjie/0513/src/exception.cj"},"position":{"line":26,"character":21}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}