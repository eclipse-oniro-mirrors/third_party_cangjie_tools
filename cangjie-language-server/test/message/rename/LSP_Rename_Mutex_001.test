{"caseFolder":"normalTest//ConCurrency", "id":"22"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/code0506/ConCurrency","rootUri":"file:///d%3A/code0506/ConCurrency/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/develop/B082/cangjie_language_server/test/testChr/normalTest/ConCurrency/src/mutex.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\nfrom std import sync.*\n\nvar m = MultiConditionMonitor()\nvar c = m.newCondition()\nvar flag : Bool = true\nvar count : Int64 = 0\n\nfunc test2() : Int64 {\n    spawn {\n        m.lock()\n        while (flag) {\n            m.wait(c)\n        }\n        count = count + 1\n        m.unlock()\n    }\n    m.lock()\n    flag = false\n    m.unlock()\n    m.notify(c)\n    return 0\n}\n\nvar m2 = Mult\n\n\n"}}}
{"jsonrpc":"2.0","id":"22","method":"textDocument/rename","params":{"newName":"m1","textDocument":{"uri":"file:///d%3A/code0506/ConCurrency/src/mutex.cj"},"position":{"line":9,"character":8}}}
{"jsonrpc":"2.0","id":"4","method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}