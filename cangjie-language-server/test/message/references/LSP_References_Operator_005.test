{"caseFolder":"normalTest//Operator", "id":"56"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/test/testChr/normalTest/Operator","rootUri":"file:///d%3A/test/testChr/normalTest/Operator/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///D%3A/code0506/MyApplication/src/operator.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\n// 操作符重载\n\nclass Point1{\n    var x: Int32 = 0\n    var y: Int32 = 0\n    init (a: Int32, b: Int32) {\n        x = a\n        y = b\n    }\n\n    // unary\n    operator func -(): Point1 { Point1(-this.x, -this.y) }\n    operator func !(): Point1 { Point1(-this.x, -this.y) }\n\n    //binary\n    operator func +(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func -(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func *(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func /(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func %(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func **(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func <<(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func >>(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func <(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func <=(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func >(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func >=(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func ==(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func !=(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func &(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func ^(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n    operator func |(right: Point1): Point1  { Point1(this.x + right.x, this.y + right.y) }\n\n}\nfunc main(): Int64 {\n    var p1 = Point1(8, 24)\n    var p2 = Point1(10,32)\n\n    var p3 = -p1\n    var p4 = !p1\n\n    var p5 = p1 + p2\n    var p6 = p1 - p2\n    var p7 = p1 * p2\n    var p8 = p1 / p2\n    var p9 = p1 % p2\n    var p10 = p1 ** p2\n    var p11 = p1 << p2\n    var p12 = p1 >> p2\n    var p13 = p1 < p2\n    var p14 = p1 <= p2\n    var p15 = p1 > p2\n    var p16 = p1 >= p2\n    var p17 = p1 == p2\n    var p18 = p1 != p2\n    var p19 = p1 & p2\n    var p20 = p1 ^ p2\n    var p21 = p1 | p2\n\n    return 0\n}\n\nclass A {\n    var num: Int64 = 0\n\n    operator func [](index: Int64): Int64 {\n        return this.num + index\n    }\n\n    operator func [](index: Int64, value: Int64): Unit {\n        this.num = index + value\n    }\n}\n\nfunc main1(): Int64 {\n    var a: A = A()\n    print(\"${a[2]}\\n\") // invoke operator func [](x: A, index: Int64): Int64\n    a[2, 5]         // invoke operator func [](x: A, index: Int64, value: Int64): Unit\n    print(\"${a[1]}\")\n    return 0\n}\n"}}}
{"jsonrpc":"2.0","id":"56","method":"textDocument/references","params":{"context":{"includeDeclaration":false},"textDocument":{"uri":"file:///d%3A/test/testChr/normalTest/Operator/src/operator.cj"},"position":{"line":54,"character":17}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}