{"caseFolder":"normalTest//Range", "id":"9"}
{"jsonrpc":"2.0","id":"0","method":"initialize","params":{"processId":null,"rootPath":"C:/Users/code_project/DevEcoStudioProjects/MyApplication3","rootUri":"file:///c%3A/Users/code_project/DevEcoStudioProjects/MyApplication3/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d:/test_char/src/Range.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\nlet range1 = 0..10:1   // Define an half-open range [0,10) (with step = 1) which contains 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9.\nlet range2 = 0..=10:2  // Define a closed range [0,10] (with step = 2) which contains 0, 2, 4, 6, 8 and 10.\nlet range3 = 10..0:-2  // Define an half-open range [10,0) (with step = -2) which contains 10, 8, 6, 4 and 2.\nlet range4 = 10..=0:-1 // Define a closed range [10,0] (with step = -1) which contains 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 and 0.\nlet range5 = 10..0:1   // Define an empty range.\nlet range6 = 0..0:1    // Define an empty range.\nlet range7 = 0..=0:1   // Define a closed range [0,0] (with step = 1) which only contains 0.\nlet range8 = 0..=10:-1 // Define an empty range.\nlet range9 = 0..10:0   // error: the value of the step should not be zero.\nlet range10 = 0..=10:0 // error: the value of the step should not be zero.\nlet range11 = 1..10   // Define an half-open range [1, 10) with step = 1.\nlet range12 = 1..=10  // Define a closed range [1, 10] with step = 1.\nlet range13 = ..10    // error: the start value is required.\nlet range14 = 1..     // error: the end value is required.\nlet range15 = ..      // error: the start and end value are required.\n\nlet range16: Range<Int64> = 0..10 // Define an half-open range [0,10) with step = 1\nlet range17: Range<Int64> = -10..10:2 // Define an half-open range [-10,10) with step = 2\nlet range18 = 0..=10 // Define a closed range [0,10] with step = 1\nlet range19 = -10..=10:2 // Define a closed range [-10,10] with step = 2\nfunc functest() {\n    for (i in range1) {\n        print(i.toString())\n    }\n}\n\n\n"}}}
{"jsonrpc":"2.0","id":"9","method":"textDocument/references","params":{"textDocument":{"uri":"file:///d:/test_char/src/Range.cj"},"position":{"line":27,"character":16}}}
{"jsonrpc":"2.0","id":"4","method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}