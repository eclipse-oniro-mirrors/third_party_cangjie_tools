{"caseFolder":"normalTest//String", "id":"7"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/Work/projects/Iteration_5th/B055/UT","rootUri":"file:///d%3A/Work/projects/Iteration_5th/B055/UT/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/String/src/String.cj","languageId":"Cangjie","version":1,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\npackage testString\r\n\r\nfunc Test_String_Single_Line(){\r\n    let s1 = \"\" // empty string\r\n    let s2: String = \"Hello Cangjie Lang\" // define string s2\r\n    var s3 = \"\\\"Hello Cangjie Lang\\\"\" // define string s3 containing character \"\r\n    var s4: String = \"Hello Cangjie Lang\\n\" // define string s4 containing character \\n\r\n\tlet s5 = \"hello\\\" // illegal string with character \\\r\n\tlet s6 = \"Hello \"Cangjie Lang\" // illegal string with character \"\r\n}\r\n\r\nfunc Test_String_Completion(){\r\n    var str = \"\"\r\n    var res: ComparisionResult = str.compareTo(\"a\")\r\n}\r\n\r\nfunc Test_String_Other_Feature(){\r\n    var str = \"\"\r\n    var str2 = \"str2\"\r\n    var res = str == str2\r\n}\r\n\r\nfunc Test_String_Interpolation(){\r\n    let obj = \"apples\"\r\n    let count = 10\r\n    let inter =  \"there are${count * count}\"\r\n    //let interps1 = \"There are ${count * count} $(obj).\"\r\n    // The result of \"interps1\" is: There are 100 apples.\r\n\r\n    let interps1 = \"There are ${count * 10} $(obj).\"\r\n\r\n    let d1 = \"The $ sign.\"\r\n    // The result of \"d1\" is: The $ sign.\r\n    let d2 = \"The \\$(v).\"\r\n    // The result of \"d2\" is: The $(v).\r\n}\r\n\r\n\r\nfunc Test_String_Multi_Line(){\r\n    let s1 = \"\"\"\r\n    \"\"\" // empty multi-line string\r\n    let errorStr = \"\"\"abc // Error: there must be a line terminator after the\r\n    begining double quotations.\r\n    \"\"\"\r\n    /*\r\n    The result of s2 is:\r\n    This\r\n    is a multi-line string\r\n    */\r\n    let s2 = \"\"\"\r\n        This\r\n    is a multi-line string\"\"\"\r\n    /*\r\n    The result of s3 is:\r\n    This\r\n    is a multi-line string\r\n    */\r\n    let s3 = \"\"\"\r\n        This\r\n    is a multi-line string\"\"\"\r\n    /*\r\n    The result of s4 is:\r\n    This\r\n    is a\r\n    multi-line string\r\n    */\r\n    let s4 = \"\"\"\r\n    This\r\n        is a\r\n    multi-line string\r\n    \"\"\"\r\n\r\n    /*\r\n    The result of s5 is:\r\n    This is a\r\n    multi-line string\r\n    */\r\n    let s5 = \"\"\"\r\n    This is a\\n\r\n    multi-line string\r\n    \"\"\"\r\n}\r\n\r\nfunc Test_String_Multi_Line_2(){\r\n    let empty1 = #\"\"# // empty multi-line raw string\r\n    let empty2 = ##\"\"## // empty multi-line raw string\r\n    /*\r\n    The result of s2 is:\r\n    This\r\n    is a multi-line string\r\n    */\r\n    let s2 = ##\"\r\n    This\r\n    is a multi-line raw string\"##\r\n    /*\r\n    The result of s3 is:\r\n    This is a\\n\r\n    multi-line string\r\n    */\r\n    let s3 = #\"This is a\\n\r\n    multi-line string\"#\r\n    /*\r\n    The result of s4 is:\r\n    This is a \"#\r\n    */\r\n    let s4 = ##\" This is a \"#\r\n    \"##\r\n    // Error: the begining and ending numbers of `#` are not matched.\r\n    let errorStr1 = ##\" error string \"#\r\n}\r\n\r\n"}}}
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"src/String.cj"},"position":{"line":19,"character":23}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}