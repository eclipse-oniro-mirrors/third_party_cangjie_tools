{"caseFolder":"normalTest//RefArray", "id":"7"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/Work/projects/Iteration_5th/B055/UT","rootUri":"file:///d%3A/Work/projects/Iteration_5th/B055/UT/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/RefArray/src/refArray_01.cj","languageId":"Cangjie","version":1,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\nclass AAAA{}\r\nlet external_emptyArrr =  RefArray<Int64>()\r\nfunc testArray(){\r\n\r\n    let emptyArr1 = RefArray<Int64>() // create an empty array whose type is RefArray<Int64>\r\n    let emptyArr2 = RefArray<String>() // create an empty array whose type is  RefArray<String>\r\n    let classsAAA = RefArray<AAAA>()\r\n\r\n    let array1 = RefArray<Int64>([0, 1, 2, 3, 4, 5]) // 'array1' has 6 elememts: 0, 1, 2, 3, 4, 5\r\n    let array_str = RefArray<String>([\"0\", \"1\"])\r\n\r\n    //var array2 = RefArray<RefArray<Int64>>([[0, 1, 2], [3, 4, 5]]) // 'array2' is a two-dimensional array 暂时不支持多维RefArray字面量初始化\r\n\r\n\r\n\r\n    let array1s = RefArray<Int64>([0, 1, 2, 3, 4, 5]) // 'array1' has 6 elememts: 0, 1, 2, 3, 4, 5\r\n\r\n    let array3 = RefArray<Int64>(3) { i => i * 2 } // 'array3' has 3 elememts: 0, 2, 4\r\n    //let array4 = RefArray<RefArray<Int64>>(2) { i => RefArray<Int64>(2) {j => i + j} } // array4 = RefArray<RefArray<Int64>>([[0, 1], [1, 2]])\r\n    let array5 = RefArray<Int64>([0, 1])\r\n\r\n    let element0 = array5[0] // element0 = 0\r\n    array5[1] = 10 // change the value of the second element of 'array5' through index\r\n\r\n    let array_error = RefArray<Int64>([0, 0.1])\r\n    /*\r\n    //暂不支持\r\n    let array6 = RefArray<RefArray<Float64>>([[0.1, 0.2], [0.3, 0.4]])\r\n\r\n\r\n    let element01 = array6[0][1] // element01 = 0.2\r\n    array6[1][1] = 4.0 // change the value of the last element of 'array6' through index\r\n    */\r\n\r\n    let array9 = RefArray<Int64>([0, 1, 2, 3, 4, 5])\r\n    \r\n    func slicingTest() {\r\n        array9[0..5] // RefArray<Int64>([0, 1, 2, 3, 4])\r\n        array9[0..5:1] // RefArray<Int64>([0, 1, 2, 3, 4])\r\n        array9[0..5:2] // RefArray<Int64>([0, 2, 4])\r\n        array9[5..0:-1] // RefArray<Int64>([5, 4, 3, 2, 1])\r\n        array9[5..0:-2] // RefArray<Int64>([5, 3, 1])\r\n        array9[0..=5] // RefArray<Int64>([0, 1, 2, 3, 4, 5])\r\n        array9[0..=5:1] // RefArray<Int64>([0, 1, 2, 3, 4, 5])\r\n        array9[0..=5:2] // RefArray<Int64>([0, 2, 4])\r\n        array9[5..=0:-1] // RefArray<Int64>([5, 4, 3, 2, 1, 0])\r\n        array9[5..=0:-2] // RefArray<Int64>([5, 3, 1])\r\n        array9[..4] // RefArray<Int64>([0, 1, 2, 3])\r\n        array9[2..] // RefArray<Int64>([2, 3, 4, 5])\r\n        array9[..] // RefArray<Int64>([0, 1, 2, 3, 4, 5])\r\n        array9[..4:2] // error: the value of 'step' cannot be set.\r\n        array9[2..:-2] // error: the value of 'step' cannot be set.\r\n        array9[..:-1] // error: the value of 'step' cannot be set.\r\n        array9[..=4] // RefArray<Int64>([0, 1, 2, 3, 4])\r\n        array9[..=4:2] // error: the value of 'step' cannot be set.\r\n        array9[0..5:-1] // RefArray<Int64>()\r\n        array9[5..=0] // RefArray<Int64>()\r\n        array9[..0] // RefArray<Int64>()\r\n        array9[..=-1] // RefArray<Int64>()\r\n    }\r\n}\r\n\r\nfunc accesss() {\r\n    let array8 = RefArray<Int64>([1, 8, 0, 1, 0])\r\n    for (num in array8) {\r\n        print(\"${num}\") // output: 18010\r\n    }\r\n\r\n    let array9 = RefArray<Int64>([0, 1, 2, 3, 4, 5])\r\n    let size1 = array9.size() // size1 = 6\r\n    let array10 = RefArray<RefArray<Int64>>([[0, 1, 2], [3, 4, 5]])\r\n    let size2 = array10.size() // size2 = 2\r\n\r\n}\r\n"}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}