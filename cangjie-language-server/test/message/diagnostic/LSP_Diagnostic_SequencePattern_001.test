{"caseFolder":"normalTest//PatternMatch", "id":"7"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/Work/projects/Iteration_5th/B055/UT","rootUri":"file:///d%3A/Work/projects/Iteration_5th/B055/UT/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/PatternMatch/src/sequencePattern/sequencePattern.cj","languageId":"Cangjie","version":1,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\npackage sequencePattern\r\n\r\n//不支持标准库里的Array\r\n let a = @{50, 70, 90} // sorted array\r\n //var ss = \"empty score list\"\r\n var r1: Int64 = match (a) {\r\n case [] => 0\r\n case [50, ...] => 50 // matched\r\n case [..., 90] => 90\r\n case [low, ..., high] => high - low\r\n case [...] => 60\r\n }\r\n\r\n let b: List<Int64> = [60, 80, 100] // sorted list\r\n var r2:Unit = match (b) {\r\n case [] => var ss = 0\r\n case [0, ...] => var ss = 0\r\n case [..., 99] => var ss = 99\r\n case [low, ..., high] => var ss =high // matched\r\n case [...] => var ss = \"default case\"\r\n }\r\n let c: List<Int64> = [40, 60, 80, 100] // sorted list\r\n var r3: Int64 = match (c) {\r\n case [] => 0\r\n case [a1, a2, a3, ..., b1, b2, b3] => (a1 + a2 + a3 + b1 + b2 + b3) // matched\r\n case [...] => 100\r\n }\r\n"}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}