{"caseFolder":"normalTest//Tuple", "id":"2"}
{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":null,"rootPath":"D:/test/testChr/normalTest/Tuple","rootUri":"file:///d%3A/test/testChr/normalTest/Tuple/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/test/testChr/normalTest/Tuple/src/tuple.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\n\nimport test.*\n\n\nfunc main(): Int64 {\n    var pi = (3.14, \"PIE\")\n    print(\"${pi[0]}\")\n    print(\"${pi[1]}\")\n    return 0\n}\n\n\nfunc multiValues(a: Int32, b: Int32) { (a + b, a - b) } // The type of the return value of the function multiValues is Int32*Int32.\nfunc main1() {\n    var (x, y) = multiValues(8,24) // Define an anonymous tuple who has two elements, i.e., x and y.\n    print(\"${x}\") // output: 32\n    print(\"${y}\") // output: -16\n    return 0\n}\n\nfunc main2() {\n    let tuplePIE = (3.14, \"PIE\")     // The type of tuplePIE is inferred to be Float64*String.\n    var pointOne = (2.4, 3.5) \t\t// The type of pointOne is inferred to be Float64*Float64.\n    var pointTwo = (2, 3, 4) \t\t// The type of pointTwo is inferred to be Int64*Int64*Int64.\n    var pointThree = ((2, 3), 4) \t// The type of pointThree is inferred to be (Int64*Int64)*Int64.\n\n    // 重命名，选中高亮，查找引用\n    var a = tuplePIE[0]\n    var b = tuplePIE[1]\n    var c = tuple2\n    var d = tuple3\n}"}}}
{"jsonrpc":"2.0","id":"2","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///d%3A/test/testChr/normalTest/Tuple/src/tuple.cj"}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}