{"caseFolder":"normalTest//Base", "id":"9"}
{"jsonrpc":"2.0","id":"0","method":"initialize","params":{"processId":null,"rootPath":"C:/Users/code_project/DevEcoStudioProjects/MyApplication3","rootUri":"file:///c%3A/Users/code_project/DevEcoStudioProjects/MyApplication3/","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{},"didChangeWatchedFiles":{},"symbol":{},"executeCommand":{},"workspaceFolders":false,"configuration":false},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{"dynamicRegistration":true},"formatting":{},"rangeFormatting":{},"onTypeFormatting":{},"definition":{},"codeAction":{},"documentLink":{},"rename":{"prepareSupport":true},"semanticHighlightingCapabilities":{"semanticHighlighting":true},"callHierarchy":{},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","member","label"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d:/test_char/src/Base.cj","languageId":"Cangjie","version":0,"text":"// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n// This source file is part of the Cangjie project, licensed under Apache-2.0\n// with Runtime Library Exception.\n//\n// See https://cangjie-lang.cn/pages/LICENSE for license information.\n\n\nlet Int8One: Int8 = 24\nlet Int16One: Int16 = 16\nlet Int32One: Int32 = 16\nlet Int64One: Int64 = 16\nlet Uint8One: Int8 = 24.2 //err\nlet Uint16One: UInt16 = 16\nlet Uint32One: UInt32 = 16\nlet Uint64One: UInt64 = 16\nlet Float16One: Float16 = 100.1 \nlet Float32One: Float32 = .8\nlet Float64One: Float64 = 2.4e-1\nlet boolOne: Bool = true\nlet CharOne: Char = 'c'\nlet unitOne: Unit = ()\nfunc  funcA() : Unit{\n    \n}\n\n\nlet FloatTwo: Float32 = 200\n\n//浮点数不能够自动转化为整数 所以此处会有诊断报错\nlet errY: Int64 = 1.0 + 3 //err Float cannot transport to Int64\n// let errY: Int64 = 1 + 3\nlet x: Float64 = 1.0 + 3\nlet zzz: Float64 = 1.0 + 3\nvar ans22 = errY + x + zzz\n\n\nvar Character: Char = 'a'\nvar u32Number: UInt32 = 0\nvar i8Number: Int8 = 127\nvar i16Number: Int16 = 0\nfunc funcTest():Unit{\n    u32Number = UInt32(Character)\n    u32Number -= 32\n    Character = Char(u32Number)\n    i16Number = Int64(i8Number) //err 不能跳转到括号内的定义\n    i16Number = 127\n    i8Number = Int8(i16Number)\n}\n\n\nvar Character1: Char = 'a'\nvar u32Number1: UInt32 = 0\nfunc funcTest2():Unit{\n    u32Number1 = UInt32(Character1)\n    u32Number1 -= 32\n    Character1 = Char(u32Number1)\n}\n\n\nvar i8Number1: Int8 = 127\nvar i16Number1: Int16 = 0\nfunc funcTest3():Unit{\n    i16Number1 = Int16(i8Number1)\n    i16Number1 = 127\n    i8Number1 = Int16(i16Number1)  //err\n    i8Number1 = i16Number1\n    i8Number1 = i16Number1 + Int16(i16Number1)  //err\n    i8Number1 = 127\n    i16Number1 = 128\n    i8Number1 = Int8(i16Number1)\n}\n\n\nfunc f1() {\n    let bool1: Bool = true\n    var bool2: Bool = false\n    bool2 = true // assignment\n    bool2 &&= bool1 // bool2=true\n    bool2 ||= bool1 // bool2=true\n    true == false // return false\n    true != false // return true\n    !false // logical NOT, return true\n    true && false // logical AND, return false\n    false || false // logical OR, return false\n    return 0\n}\nfunc f2() {\n    'A'=='A' // result: true\n    'A'!='A' // result: false\n    'A'<'a' // result: true\n    'A'<='A' // result: true\n    'A'>'a' // result: false\n    'A'>='A' // result: true\n    return 0\n}"}}}
{"jsonrpc":"2.0","id":"4","method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}}